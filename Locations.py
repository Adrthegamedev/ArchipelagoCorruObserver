from BaseClasses import Location
from worlds.generic.Rules import add_rule
import typing
from . import logic
if typing.TYPE_CHECKING:
    from . import CorruObserverWorld


class LocationData(typing.NamedTuple):
    id: typing.Optional[int]
    region: str

class CorruObserverLocation(Location):
    game: str = "CorruObserver"


location_table = {
    # EP0
    "Menu: Examined Dendritic Cyst": LocationData(154140000, "Menu"),
    "Menu: Examined Fractalline Cyst": LocationData(154140001, "Menu"),
    "Menu: Examined Cyst": LocationData(154140002, "Menu"),
    "Menu: Touched Cyst": LocationData(154140003, "Menu"),
    "Menu: Depth Scanned Cyst": LocationData(154140004, "Menu"),
    #"Menu: Completed Intro": LocationData(154140005, "Menu"),
    "Visited: /hello/": LocationData(154140006, "Hello"),
    "Hello: Sentry called you idiot": LocationData(154140007, "Hello"),
    "Visited: /hub/": LocationData(154140008, "Hub"),
    "Hub: Funfriend introduced": LocationData(154140009, "Hub"),
    "Visited: /local/city/": LocationData(154140010, "Their City"),
    "Visited: /local/city/street/": LocationData(154140011, "City Streets"),
    "City Streets: Tried Room High Up chat": LocationData(154140012, "City Streets"),
    "City Streets: Cashier hello": LocationData(154140013, "City Streets"),
    "City Streets: Orange Coffee": LocationData(154140014, "City Streets"),
    "City Streets: Got Drinks": LocationData(154140015, "City Streets"),
    "Visited: /local/orbit/": LocationData(154140016, "The Void"),
    "Visited: /local/dullvessel/": LocationData(154140017, "Dull Vessel"),
    "Visited: /local/ocean/": LocationData(154140018, "Their Waters"),
    "Visited: /local/ocean/ship/": LocationData(154140019, "Their Vessel"),
    "Visited: /local/ocean/ship/interview/": LocationData(154140020, "First Chat"),
    "First Chat: Be Honest": LocationData(154140021, "First Chat"),
    #"dullvessel_dive": LocationData(154140022, "Dull Vessel"),
    "Visited: /local/depths/": LocationData(154140023, "The Depths"),
    "Depths: Ejected from cyst": LocationData(154140024, "The Depths"),
    "Depths: Awaiting EP0 Epilogue": LocationData(154140025, "The Depths"),
    "Menu: Started EP0 Epilogue": LocationData(154140026, "Menu"),
    "Hub: Talked to funfriend about EP0 Epilogue container": LocationData(154140027, "Hub"),
    "Visited: /local/uncosm/": LocationData(154140028, "Uncosm"),
    "Visited: /local/uncosm/no/": LocationData(154140029, "Uncosm"),
    # EP1
    "Menu: EP1 Shown Materials": LocationData(154140030, "Menu"),
    "Menu: EP1 Fed": LocationData(154140031, "Menu"),
    "Hub: Funfriend EP1 Fed dialogue": LocationData(154140032, "Hub"),
    "Visited: /local/ocean/embassy/": LocationData(154140033, "The Embassy"),
    "The Embassy: Completed Discovery": LocationData(154140034, "The Embassy"),
    "The Embassy: Completed Suspicion": LocationData(154140035, "The Embassy"),
    "City Streets: EP1 End Velzie Encounter": LocationData(154140036, "City Streets"),
    "Visited: /local/ocean/ship/elsewhere/": LocationData(154140037, "Clemens Romanus"),
    "Clemens Romanus: Seen Hole": LocationData(154140038, "Clemens Romanus"),
    "Seen Proxyfriend": LocationData(154140039, "Menu"), # multiple locations actually
    "Visited: /local/cache/": LocationData(154140040, "Cache"),
    "Hub: Funfriend God Dialogue": LocationData(154140041, "Hub"),
    "Visited: /local/uncosm/recosm/": LocationData(154140042, "Recosm"),
    "Recosm: Greeted God": LocationData(154140043, "Recosm"),
    "Recosm: Began God proxy fight": LocationData(154140044, "Recosm"),
    #"recosm_finalseen": LocationData(154140045, "Recosm"),
    "Recosm: God End State": LocationData(154140046, "Recosm"),
    # EP2
    "Menu: EP2 Intro": LocationData(154140047, "Menu"),
    "The Embassy: Framing Device Introduction": LocationData(154140048, "The Embassy"),
    "Hub: Framing Device Installation": LocationData(154140049, "Hub"),
    "The Embassy: Collapse Kazki Storage Display": LocationData(154140050, "The Embassy"),
    "The Embassy: Gakvu coat pause state": LocationData(154140051, "The Embassy"),
    "The Embassy: Movefriend Fight Dialogue Begin": LocationData(154140052, "The Embassy"),
    "The Embassy: Movefriend Fight Dialogue End": LocationData(154140053, "The Embassy"),
    # EP3
    "Menu: EP3 Intro": LocationData(154140054, "Menu"),
    "Visited: /local/ocean/embassy/golem/": LocationData(154140055, "Golem Maintenance"),
    "Golem Maintenance: Dog Examine": LocationData(154140056, "Menu"), # multiple places, despite being in golems
    "Golem Maintenance: Metatrauma": LocationData(154140057, "Golem Maintenance"),
    "Golem Maintenance: Foundation Golem start": LocationData(154140058, "Golem Maintenance"),
    "Golem Maintenance: Foundation Golem end": LocationData(154140059, "Golem Maintenance"),
    # EP3ADD1 (sequestered off even though accessible by ep2)
    "Visited: /local/beneath/": LocationData(154140060, "Beneath"),
    "Beneath intro dialogue": LocationData(154140061, "Menu"), # many places
    "Dull Vessel: Akizet's Room": LocationData(154140062, "Dull Vessel"),
    "Dull Vessel: Destroyed Dull Vessel": LocationData(154140063, "Dull Vessel"),
    "Beneath: abyss.png": LocationData(154140064, "Beneath"),
    "Beneath: EFFIGY.png": LocationData(154140065, "Beneath"),
    "Beneath: nothanks.png": LocationData(154140066, "Beneath"),
    "Beneath: Drowning calmed": LocationData(154140067, "Beneath"), # alas filler
    "Visited: /local/beneath/parasite/": LocationData(154140068, "Parasite Plane"),
    "Parasite Plane: Call Team pieces": LocationData(154140069, "Parasite Plane"),
    "Parasite Plane: Tactical Board examine": LocationData(154140070, "Parasite Plane"),
    "Visited: /local/beneath/depths/": LocationData(154140071, "Beneath Depths"),
    "First Chat (Incoherent): Dying to Ghost": LocationData(154140072, "First Chat"),
    "First Chat (Incoherent): Seen Ghost": LocationData(154140073, "First Chat"),
    "First Chat (Incoherent): Interview Lady Unitied": LocationData(154140074, "First Chat"), # Interviewer unitied
    "Beneath Depths: Velzie Encounter": LocationData(154140075, "Beneath Depths"), # it's not on beneath_depths because that only gets set if you unity it
    "Visited: /local/ozo/": LocationData(154140076, "Jokzi Ozo"),
    "Jokzi Ozo: Unity Mask": LocationData(154140077, "Jokzi Ozo"), # Unity mask
    "Jokzi Ozo: Hunger Mask": LocationData(154140078, "Jokzi Ozo"), # Hunger mask
    "The Void: Fairy Unitied": LocationData(154140079, "The Void"), # Fairy unitied
    "City Streets: Isabel Unitied": LocationData(154140080, "City Streets"), # Isabel unitied
    "City Streets: Fawners Effigies Unitied": LocationData(154140081, "City Streets"), # Fawner effigies unitied
    "Beneath: Dancer Effigy Unitied": LocationData(154140082, "Beneath"), # Dancer effigy unitied
    "Parasite Plane: Gamer Effigy Unitied": LocationData(154140083, "Parasite Plane"), # Gamer effigy unitied
    "Memory Hole: Effigy: Sipper Effigy Unitied": LocationData(154140084, "Memory Hole (Effigy)"), # Sipper effigy unitied
    "Memory Hole: Cavik: Cavik": LocationData(154140085, "Memory Hole"), # Secavik
    "Memory Hole: Cavik: Cavik unitied": LocationData(154140086, "Memory Hole"), # Secavik Unitied
    "Hub: Funfriend Ozo notification": LocationData(154140087, "Hub"),
    "Hub: Funfriend Ozo Gate dialogue": LocationData(154140088, "Hub"),
    "Jokzi Ozo: Enter dark room": LocationData(154140089, "Jokzi Ozo"),
    "Jokzi Ozo: Council Dance": LocationData(154140090, "Jokzi Ozo"),
    "Effigy seen": LocationData(154140091, "Menu"), # multiple locations actually
    # EP3ADD2
    "Visited: /local/beneath/embassy/": LocationData(154140092, "::/FRAME/"),
    "::/FRAME/: Seen Daemon": LocationData(154140093, "::/FRAME/"),
    #"bosswarn": LocationData(154140094, "::/FRAME/"),
    "::/FRAME/: Seen Daemon Mimic": LocationData(154140095, "::/FRAME/"),
    "::/FRAME/: Seen Rule-2-breaking Daemon": LocationData(154140096, "::/FRAME/"),
    "::/FRAME/: Examined Interloper": LocationData(154140097, "::/FRAME/"),
    #"e3a2escape,in_progress": LocationData(154140098, "::/FRAME/"), # too janky for logic
    #"e3a2escape,completed": LocationData(154140099, "::/FRAME/"), # too janky for logic
    "::/FRAME/: Won Escape": LocationData(154140100, "::/FRAME/"), # Geli unitied; also set e3a2__geliintro and ozo__ozogeli
    "::/FRAME/: ???": LocationData(154140101, "::/FRAME/"),
    # ODEN
    "Golem Maintenance: Dog Unity": LocationData(154140102, "Menu"), # multiple places, despite being in golems
    "Jokzi Ozo: Event: Council - geli": LocationData(154140103, "Jokzi Ozo"), # Council Geli event
    "Jokzi Ozo: Event: Council - isabel": LocationData(154140104, "Jokzi Ozo"), # Council Isabel event
    "Jokzi Ozo: Event: Council - fairy": LocationData(154140105, "Jokzi Ozo"), # Council Fairy event
    "Jokzi Ozo: Event: Council - stow": LocationData(154140106, "Jokzi Ozo"), # Council Stowaway event
    "Jokzi Ozo: Event: Council - effigies": LocationData(154140107, "Jokzi Ozo"), # Council Effigies event
    "Jokzi Ozo: Event: Fairy - geli": LocationData(154140108, "Jokzi Ozo"), # Fairy Geli event
    "Jokzi Ozo: Event: Fairy - stow": LocationData(154140109, "Jokzi Ozo"), # Fairy Stowaway event
    "Jokzi Ozo: Event: Fairy - effigies": LocationData(154140110, "Jokzi Ozo"), # Fairy Effigies event
    "Jokzi Ozo: Event: Isabel - gelistow": LocationData(154140111, "Jokzi Ozo"), # Isabel Geli Stowaway event
    "Jokzi Ozo: Event: Isabel - stow": LocationData(154140112, "Jokzi Ozo"), # Isabel Stowaway event
    "Jokzi Ozo: Event: Isabel - geli": LocationData(154140113, "Jokzi Ozo"), # Isabel Geli event
    "Jokzi Ozo: Event: Isabel - fairy": LocationData(154140114, "Jokzi Ozo"), # Isabel Fairy event
    "Jokzi Ozo: Event: Dark room - effigy1": LocationData(154140115, "Jokzi Ozo"), # Dark Effigy1 event
    "Jokzi Ozo: Event: Dark room - effigy2": LocationData(154140116, "Jokzi Ozo"), # Dark Effigy2 event
    "Jokzi Ozo: Event: Dark room - stow": LocationData(154140117, "Jokzi Ozo"), # Dark Stowaway event
    "Seen Velzie buddy": LocationData(154140118, "Menu"), # many places
    # EP4
    "Menu: EP4 Intro": LocationData(154140119, "Menu"),
    "Visited: /local/ocean/embassy/groundsmindry/": LocationData(154140120, "Pale Halls"),
    "Pale Halls: Leverage obtained": LocationData(154140121, "Pale Halls"),
    "Pale Halls: Final Room Entrance": LocationData(154140122, "Pale Halls"),
    # EP4ADD1
    "Jokzi Ozo: Joy Mask": LocationData(154140123, "Jokzi Ozo"),
    "Jokzi Ozo: Freedom Mask": LocationData(154140124, "Jokzi Ozo"),
    "Referential Scar Examined": LocationData(154140125, "Menu"), # many places
    "Jokzi Ozo: Referential Scar": LocationData(154140126, "Jokzi Ozo"),
    "Hello: Referential Scar": LocationData(154140127, "Hello"),
    "Dull Vessel: Referential Scar": LocationData(154140128, "Dull Vessel"),
    "City Streets: Referential Scar": LocationData(154140129, "City Streets"),
    "Clemens Romanus: Referential Scar": LocationData(154140130, "Clemens Romanus"),
    "Labs: Referential Scar": LocationData(154140131, "Labs"),
    "City Street: Director Meeting": LocationData(154140132, "City Streets"),
    "City Street: Cass Portal": LocationData(154140133, "City Streets"),
    "Beneath: Drowning Falloff Relief": LocationData(154140134, "City Streets"),
    "Visited: /local/beneath/car/": LocationData(154140135, "Car"),
    "Car: Intro": LocationData(154140136, "Car"),
    "Visited: /local/uncosm/pit/": LocationData(154140137, "Labs"),
    "Labs: Landmine spotted": LocationData(154140138, "Labs"),
    "Labs: Spida spotted": LocationData(154140139, "Labs"),
    "Labs: The Looker spotted": LocationData(154140140, "Labs"),
    "Labs: Keycard": LocationData(154140141, "Labs"),
    "Labs: Wakizet Unity": LocationData(154140142, "Labs"),
    "Jokzi Ozo: Wakizet Intro": LocationData(154140143, "Jokzi Ozo"),
    "Visited: /local/ocean/polygonation/": LocationData(154140144, "Better Times"),
    "Better Times: Cass": LocationData(154140145, "Better Times"),
    "Visited: /local/orbit/moon/": LocationData(154140146, "Bright Moon"),
    "Visited: /local/ocean/ship/deck/": LocationData(154140147, "Vessel Surface"),
    "Visited: /local/city/aquarium/": LocationData(154140148, "Aquarium"),
    "City Streets: Data room": LocationData(154140149, "City Streets"),
    "City Streets: Moth 2040 thing": LocationData(154140150, "City Streets"),
    "The Void: outofreach.png": LocationData(154140151, "The Void"),
    "City Streets: domain.png": LocationData(154140152, "City Streets"),
    "City Streets: quiet.png": LocationData(154140153, "City Streets"),
    "City Streets: breach.png": LocationData(154140154, "City Streets"),
    "City Streets: reflection.png": LocationData(154140155, "City Streets"),
    "Beneath: haze.png": LocationData(154140156, "Beneath"),
    "Jokzi Ozo: wastrels.png": LocationData(154140157, "Jokzi Ozo"),
    "City Streets: Rotwatcher Intro": LocationData(154140158, "City Streets"),
    "Rotwatcher Quest Complete": LocationData(154140159, "Menu"), # many places
    "Pale Halls: BSTRD appearance": LocationData(154140160, "Pale Halls"),
    "Better Times: End": LocationData(154140161, "Better Times"),
    "Jokzi Ozo: Wakizet Better Times Dialogue": LocationData(154140162, "Jokzi Ozo"),
    "Jokzi Ozo: Event: Dark room - wakizet": LocationData(154140163, "Jokzi Ozo"),
    "Jokzi Ozo: Event: Wakizet - council": LocationData(154140164, "Jokzi Ozo"),
    "Jokzi Ozo: Event: Wakizet - isabel": LocationData(154140165, "Jokzi Ozo"),
    "Jokzi Ozo: Event: Wakizet - effigies": LocationData(154140166, "Jokzi Ozo"),
    "Jokzi Ozo: Event: Wakizet - fairy": LocationData(154140167, "Jokzi Ozo"),
    "Jokzi Ozo: Event: Wakizet - geli": LocationData(154140168, "Jokzi Ozo"),
    "Car: Enter Jokzi Ozo": LocationData(154140169, "Car"),
    "Rotwatcher Unity": LocationData(154140170, "Menu"), # many places
    "Seen Fairy Wander": LocationData(154140171, "Menu"), # many places
    # MEMORY HOLE
    "Visited: /local/uncosm/where/": LocationData(154140900, "Memory Hole"),
    "Visited: /local/uncosm/cavik/": LocationData(154140901, "Memory Hole"),
    "Visited: /local/uncosm/clemens%20romanus/": LocationData(154140902, "Memory Hole"),
    "Visited: /local/uncosm/corru/": LocationData(154140903, "Memory Hole"),
    "Visited: /local/uncosm/dog/": LocationData(154140904, "Memory Hole"),
    "Visited: /local/uncosm/dull/": LocationData(154140905, "Memory Hole"),
    "Visited: /local/uncosm/effigy/": LocationData(154140906, "Memory Hole (Effigy)"),
    "Visited: /local/uncosm/flower/": LocationData(154140907, "Memory Hole"),
    "Visited: /local/uncosm/humor/": LocationData(154140908, "Memory Hole"),
    "Visited: /local/uncosm/larval/": LocationData(154140909, "Memory Hole"),
    "Visited: /local/uncosm/parasite/": LocationData(154140910, "Memory Hole"),
    "Visited: /local/uncosm/sorry/": LocationData(154140911, "Memory Hole"),
    "Visited: /local/uncosm/spire/": LocationData(154140912, "Memory Hole"),
    "Visited: /local/uncosm/surface/": LocationData(154140913, "Memory Hole"),
    "Visited: /local/uncosm/veilk/": LocationData(154140914, "Memory Hole"),
    "Visited: /local/uncosm/yuzku/": LocationData(154140915, "Memory Hole"),
    "Visited: /local/uncosm/zuzucri/": LocationData(154140916, "Memory Hole"),
    "Visited: /local/uncosm/zuzucri-masks/": LocationData(154140917, "Memory Hole"),
    "Visited: /local/uncosm/call/": LocationData(154140918, "Memory Hole"),
    "Visited: /local/uncosm/fairy/": LocationData(154140919, "Memory Hole"),
    "Visited: /local/uncosm/walker/": LocationData(154140920, "Memory Hole"),
}



def setrules(world: "CorruObserverWorld"):
    for location, rule in getrules(world).items():
        add_rule(world.multiworld.get_location(location, world.player), rule)

def getrules(world: "CorruObserverWorld"):
    return {
        "Menu: Touched Cyst": lambda state: state.has("Menu: Examined Cyst", world.player),
        "Menu: Depth Scanned Cyst": lambda state: state.has("Menu: Touched Cyst", world.player),
        "Menu: Completed Intro": lambda state: state.has("Menu: Depth Scanned Cyst", world.player),
        "City Streets: Got Drinks": lambda state: (state.has("City Streets: Orange Coffee", world.player) and state.has("City Streets: Cashier hello", world.player)),
        #"dullvessel_dive": lambda state: state.has("First Chat: Be Honest", world.player),
        "Depths: Ejected from cyst": lambda state: state.has("First Chat: Be Honest", world.player),
        "Depths: Awaiting EP0 Epilogue": lambda state: state.has("First Chat: Be Honest", world.player),
        "Menu: Started EP0 Epilogue": lambda state: (state.has("Menu: Completed Intro", world.player) and state.has("Progressive EP0 Epilogue", world.player, 1)),
        "Hub: Talked to funfriend about EP0 Epilogue container": lambda state: state.has("Progressive EP0 Epilogue", world.player, 2),
        "Menu: EP1 Shown Materials": lambda state: (state.has("Menu: Completed Intro", world.player) and state.has("Progressive EP0 Epilogue", world.player)),
        "Menu: EP1 Fed": lambda state: state.has("Menu: EP1 Shown Materials", world.player),
        "Hub: Funfriend EP1 Fed dialogue": lambda state: state.has("Menu: EP1 Fed", world.player),
        "The Embassy: Completed Suspicion": lambda state: state.has("The Embassy: Completed Discovery", world.player),
        "City Streets: EP1 End Velzie Encounter": lambda state: state.has("The Embassy: Completed Suspicion", world.player) and state.has("First Chat: Be Honest", world.player),
        "Seen Proxyfriend": lambda state: (state.has("Menu: EP1 Fed", world.player) and (state.can_reach_region("Their City", world.player) or state.can_reach_region("Their Waters", world.player) or state.can_reach_region("The Void", world.player) or (state.has("Recosm: God End State", world.player) and (state.can_reach_region("Hello", world.player))))),
        "Hub: Funfriend God Dialogue": lambda state: state.has("Hub: Funfriend EP1 Fed dialogue", world.player),
        "Menu: EP2 Intro": lambda state: (state.has("Menu: Completed Intro", world.player) and state.has("Progressive EP0 Epilogue", world.player) and state.has("Menu: EP1 Shown Materials", world.player) and state.has("City Streets: EP1 End Velzie Encounter", world.player)),
        "The Embassy: Framing Device Introduction": lambda state: state.has("Menu: EP2 Intro", world.player),
        "Hub: Framing Device Installation": lambda state: state.has("The Embassy: Framing Device Introduction", world.player),
        "The Embassy: Collapse Kazki Storage Display": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "The Embassy: Gakvu coat pause state": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "The Embassy: Movefriend Fight Dialogue Begin": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "The Embassy: Movefriend Fight Dialogue End": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Menu: EP3 Intro": lambda state: (state.has("Menu: Completed Intro", world.player) and state.has("Progressive EP0 Epilogue", world.player) and state.has("Menu: EP1 Shown Materials", world.player) and state.has("City Streets: EP1 End Velzie Encounter", world.player) and state.has("The Embassy: Movefriend Fight Dialogue End", world.player)),
        "Beneath intro dialogue": lambda state: ((state.can_reach_region("Beneath", world.player) or logic.canAccessIncoherentInterview(state, world.player) or state.can_reach_region("Parasite Plane", world.player))),
        "Beneath: nothanks.png": lambda state: state.has("Jokzi Ozo: Unity Mask", world.player),
        "Dull Vessel: Akizet's Room": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Dull Vessel: Destroyed Dull Vessel": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "First Chat (Incoherent): Dying to Ghost": lambda state: logic.canAccessIncoherentInterview(state, world.player),
        "First Chat (Incoherent): Seen Ghost": lambda state: logic.canAccessIncoherentInterview(state, world.player),
        "First Chat (Incoherent): Interview Lady Unitied": lambda state: ((logic.canAccessIncoherentInterview(state, world.player)) and state.has("Jokzi Ozo: Unity Mask", world.player)),
        "Jokzi Ozo: Hunger Mask": lambda state: state.has("The Void: Fairy Unitied", world.player),
        "The Void: Fairy Unitied": lambda state: (state.has("Jokzi Ozo: Unity Mask", world.player) and state.has("Menu: EP2 Intro", world.player)),
        "City Streets: Isabel Unitied": lambda state: (logic.canAccessCityStreetIsabel(state, world.player)) and state.has("Jokzi Ozo: Unity Mask", world.player),
        "City Streets: Fawners Effigies Unitied": lambda state: (logic.canAccessCityStreetDocksFlip(state, world.player)) and state.has("Jokzi Ozo: Unity Mask", world.player),
        "Beneath: Dancer Effigy Unitied": lambda state: state.has("Jokzi Ozo: Unity Mask", world.player),
        "Parasite Plane: Tactical Board examine": lambda state: state.has("Hub: Framing Device Installation", world.player),
        "Parasite Plane: Gamer Effigy Unitied": lambda state: (state.has("Jokzi Ozo: Unity Mask", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Memory Hole: Effigy: Sipper Effigy Unitied": lambda state: state.has("Jokzi Ozo: Unity Mask", world.player),
        "Memory Hole: Cavik: Cavik unitied": lambda state: state.has("Jokzi Ozo: Unity Mask", world.player),
        "Hub: Funfriend Ozo notification": lambda state: state.can_reach_region("Jokzi Ozo", world.player),
        "Hub: Funfriend Ozo Gate dialogue": lambda state: state.has("Hub: Funfriend Ozo notification", world.player),
        "Jokzi Ozo: Enter dark room": lambda state: logic.canAccessOzoDarkRoom(state, world.player),
        "Jokzi Ozo: Council Dance": lambda state: (state.has("The Void: Fairy Unitied", world.player) and state.has("City Streets: Isabel Unitied", world.player)) or (state.has("City Streets: Isabel Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player)) or (state.has("The Void: Fairy Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player)),
        "Effigy seen": lambda state: (logic.canAccessCityStreetDocksFlip(state, world.player) or (state.can_reach_region("Beneath", world.player)) or (state.can_reach_region("Memory Hole (Effigy)", world.player)) or (state.can_reach_region("Parasite Plane", world.player) and state.has("Hub: Framing Device Installation", world.player)) or (state.can_reach_region("Jokzi Ozo", world.player) and state.has("City Streets: Isabel Unitied", world.player))),
        "Golem Maintenance: Dog Examine": lambda state: state.can_reach_region("Golem Maintenance", world.player) or ((state.can_reach_region("::/FRAME/", world.player) or state.can_reach_region("Jokzi Ozo", world.player)) and state.has("Golem Maintenance: Dog Unity", world.player)),
        "Golem Maintenance: Dog Unity": lambda state: (state.has("Jokzi Ozo: Unity Mask", world.player) and state.has("::/FRAME/: Won Escape", world.player)) and (state.can_reach_region("Golem Maintenance", world.player) or ((state.can_reach_region("::/FRAME/", world.player) or state.can_reach_region("Jokzi Ozo", world.player)) and state.has("Golem Maintenance: Dog Unity", world.player))),
        "Jokzi Ozo: Event: Council - geli": lambda state: state.has("::/FRAME/: Won Escape", world.player),
        "Jokzi Ozo: Event: Council - isabel": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("First Chat (Incoherent): Interview Lady Unitied", world.player),
        "Jokzi Ozo: Event: Council - fairy": lambda state: state.has("The Void: Fairy Unitied", world.player) and state.has("Menu: EP3 Intro", world.player),
        "Jokzi Ozo: Event: Council - stow": lambda state: state.has("::/FRAME/: Won Escape", world.player),
        "Jokzi Ozo: Event: Council - effigies": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("Beneath: Dancer Effigy Unitied", world.player) and state.has("City Streets: Fawners Effigies Unitied", world.player) and state.has("Parasite Plane: Gamer Effigy Unitied", world.player),
        "Jokzi Ozo: Event: Fairy - geli": lambda state: state.has("The Void: Fairy Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player),
        "Jokzi Ozo: Event: Fairy - stow": lambda state: state.has("The Void: Fairy Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player),
        "Jokzi Ozo: Event: Fairy - effigies": lambda state: state.has("The Void: Fairy Unitied", world.player) and state.has("City Streets: Isabel Unitied", world.player) and state.has("Parasite Plane: Gamer Effigy Unitied", world.player),
        "Jokzi Ozo: Event: Isabel - gelistow": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player) and state.has("Beneath: Dancer Effigy Unitied", world.player),
        "Jokzi Ozo: Event: Isabel - stow": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player) and state.has("Beneath: Dancer Effigy Unitied", world.player),
        "Jokzi Ozo: Event: Isabel - geli": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("::/FRAME/: Won Escape", world.player),
        "Jokzi Ozo: Event: Isabel - fairy": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("The Void: Fairy Unitied", world.player) and state.has("Progressive Memory Hole Cavik", world.player, 2),
        "Jokzi Ozo: Event: Dark room - effigy1": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("First Chat (Incoherent): Interview Lady Unitied", world.player),
        "Jokzi Ozo: Event: Dark room - effigy2": lambda state: state.has("City Streets: Isabel Unitied", world.player) and state.has("First Chat (Incoherent): Interview Lady Unitied", world.player),
        "Jokzi Ozo: Event: Dark room - stow": lambda state: logic.canAccessOzoDarkRoom(state, world.player) and state.has("::/FRAME/: Won Escape", world.player),
        "Seen Velzie buddy": lambda state: ((state.can_reach_region("Their City", world.player) or state.can_reach_region("The Void", world.player) or state.can_reach_region("The Embassy", world.player) or state.can_reach_region("City Streets", world.player))),
        "Menu: EP4 Intro": lambda state: (state.has("Menu: Completed Intro", world.player) and state.has("Progressive EP0 Epilogue", world.player) and state.has("Menu: EP1 Shown Materials", world.player) and state.has("City Streets: EP1 End Velzie Encounter", world.player) and state.has("The Embassy: Movefriend Fight Dialogue End", world.player) and state.has("Golem Maintenance: Foundation Golem end", world.player)),
        "Pale Halls: Leverage obtained": lambda state: state.has("Jokzi Ozo: Unity Mask", world.player),
        "Jokzi Ozo: Joy Mask": lambda state: state.has("City Streets: Isabel Unitied", world.player) and ((state.has("City Streets: Fawners Effigies Unitied", world.player) and state.has("Beneath: Dancer Effigy Unitied", world.player) and state.has("Parasite Plane: Gamer Effigy Unitied", world.player)) or (state.has("City Streets: Fawners Effigies Unitied", world.player) and state.has("Beneath: Dancer Effigy Unitied", world.player) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player)) or (state.has("City Streets: Fawners Effigies Unitied", world.player) and state.has("Parasite Plane: Gamer Effigy Unitied", world.player) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player)) or (state.has("Beneath: Dancer Effigy Unitied", world.player) and state.has("Parasite Plane: Gamer Effigy Unitied", world.player) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player))),
        "Jokzi Ozo: Freedom Mask": lambda state: state.has("::/FRAME/: Won Escape", world.player) and state.has("Pale Halls: Final Room Entrance", world.player),
        "Referential Scar Examined": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and (state.can_reach_location("Jokzi Ozo: Referential Scar", world.player) or state.can_reach_location("Hello: Referential Scar", world.player) or state.can_reach_location("Dull Vessel: Referential Scar", world.player) or state.can_reach_location("City Streets: Referential Scar", world.player) or state.can_reach_location("Clemens Romanus: Referential Scar", world.player) or state.can_reach_location("Labs: Referential Scar", world.player)), # temp
        "Jokzi Ozo: Referential Scar": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player),
        "Hello: Referential Scar": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player),
        "Dull Vessel: Referential Scar": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and logic.canAccessIncoherentDullVessel(state, world.player),
        "City Streets: Referential Scar": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and logic.canAccessCityStreetOffice(state, world.player),
        "Clemens Romanus: Referential Scar": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player),
        "Labs: Referential Scar": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.can_reach_location("Labs: Wakizet Unity", world.player)),
        "City Street: Director Meeting": lambda state: logic.canAccessCityStreetOffice(state, world.player),
        "City Street: Cass Portal": lambda state: logic.canAccessCityStreetOffice(state, world.player),
        "Beneath: Drowning Falloff Relief": lambda state: state.can_reach_entrance("Drowning room edge fall", world.player) and state.has("Beneath: Drowning calmed", world.player),
        "Labs: Landmine spotted": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player)),
        "Labs: Spida spotted": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player)),
        "Labs: The Looker spotted": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player)),
        "Labs: Keycard": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player)),
        "Labs: Wakizet Unity": lambda state: state.has("Jokzi Ozo: Unity Mask", world.player) and (state.has("Jokzi Ozo: Freedom Mask", world.player)) and (state.has("Labs: Keycard", world.player)),
        "Jokzi Ozo: Wakizet Intro": lambda state: (state.has("Labs: Wakizet Unity", world.player)),
        "City Streets: Data room": lambda state: logic.canAccessCityStreetOffice(state, world.player) and state.has("Jokzi Ozo: Hunger Mask", world.player),
        "City Streets: Moth 2040 thing": lambda state: logic.canAccessCityStreetOffice(state, world.player) and state.has("Jokzi Ozo: Hunger Mask", world.player),
        "The Void: outofreach.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)),
        "City Streets: domain.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player),
        "City Streets: quiet.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player) and logic.canAccessCityStreetIsabel(state, world.player),
        "City Streets: breach.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player) and logic.canAccessCityStreetIsabel(state, world.player),
        "City Streets: reflection.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player) and (logic.canAccessCityStreetDocksFlip(state, world.player)),
        "Beneath: haze.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player),
        "Jokzi Ozo: wastrels.png": lambda state: (state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player)) and state.has("Memory Hole: Effigy: Sipper Effigy Unitied", world.player),
        "City Streets: Rotwatcher Intro": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Menu: EP4 Intro", world.player),
        "Rotwatcher Quest Complete": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Menu: EP4 Intro", world.player) and (state.has("City Streets: Rotwatcher Intro", world.player) and (state.can_reach_region("City Streets", world.player) and state.can_reach_region("Uncosm", world.player) and state.can_reach_region("Jokzi Ozo", world.player) and (state.can_reach_region("First Chat", world.player) and logic.canAccessIncoherentInterview(state, world.player)) and (state.can_reach_region("Labs", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)))), # labs isn't required per se but its better like this
        "Pale Halls: BSTRD appearance": lambda state: state.has("Jokzi Ozo: Freedom Mask", world.player),
        "Jokzi Ozo: Wakizet Better Times Dialogue": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Better Times: End", world.player),
        "Jokzi Ozo: Event: Dark room - wakizet": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Jokzi Ozo: Wakizet Better Times Dialogue", world.player) and logic.canAccessOzoDarkRoom(state, world.player),
        "Jokzi Ozo: Event: Wakizet - council": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Jokzi Ozo: Wakizet Better Times Dialogue", world.player),
        "Jokzi Ozo: Event: Wakizet - isabel": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Jokzi Ozo: Wakizet Better Times Dialogue", world.player) and state.has("City Streets: Isabel Unitied", world.player),
        "Jokzi Ozo: Event: Wakizet - effigies": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Jokzi Ozo: Wakizet Better Times Dialogue", world.player),
        "Jokzi Ozo: Event: Wakizet - fairy": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Jokzi Ozo: Wakizet Better Times Dialogue", world.player) and state.has("The Void: Fairy Unitied", world.player),
        "Jokzi Ozo: Event: Wakizet - geli": lambda state: state.has("Labs: Wakizet Unity", world.player) and state.has("Jokzi Ozo: Wakizet Better Times Dialogue", world.player) and state.has("::/FRAME/: Won Escape", world.player),
        "Rotwatcher Unity": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and state.has("Menu: EP4 Intro", world.player) and state.has("Jokzi Ozo: Unity Mask", world.player) and (state.has("City Streets: Rotwatcher Intro", world.player) and (state.can_reach_region("Uncosm", world.player) or (state.can_reach_region("First Chat", world.player) and logic.canAccessIncoherentInterview(state, world.player)) and (state.can_reach_region("Labs", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)))),
        "Seen Fairy Wander": lambda state: state.has("Jokzi Ozo: Hunger Mask", world.player) and (state.can_reach_region("Their City", world.player) or state.can_reach_region("The Void", world.player) or state.can_reach_region("Uncosm", world.player) or (state.can_reach_region("First Chat", world.player) and logic.canAccessIncoherentInterview(state, world.player)) and (state.can_reach_region("Labs", world.player) and state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player))),
    }

scansanity_location_table = {
    "Examined: ..__LOCALHOST__..: funfriend": LocationData(154150000, "Hub"),
    "Examined: ..__THEIR_CITY__..: glimmering spires mark their cities": LocationData(154150001, "Their City"),
    "Examined: ..__THEIR_CITY__..: these grand icons of their control": LocationData(154150002, "Their City"),
    "Examined: ..__THEIR_CITY__..: they watch": LocationData(154150003, "Their City"),
    "Examined: ..__THE_VOID__..: our dull vessel": LocationData(154150004, "The Void"),
    "Examined: ..__THE_VOID__..: gate::the dull contrivance": LocationData(154150005, "The Void"),
    "Examined: ..__CITY_SURFACE__..: cashier": LocationData(154150006, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: envoy": LocationData(154150007, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: menu": LocationData(154150008, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: slim streetwalker": LocationData(154150009, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: cloaked streetwalker": LocationData(154150010, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: stre wal k": LocationData(154150011, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: the room high up": LocationData(154150012, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: electric face box": LocationData(154150013, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: beautiful parasite": LocationData(154150014, "City Streets"),
    "Examined: ..__THEIR_WATERS__..: gate::the depths": LocationData(154150015, "Their Waters"),
    "Examined: ..__THEIR_WATERS__..: their vessel": LocationData(154150016, "Their Waters"),
    "Examined: ..__THEIR_WATERS__..: stilted shore": LocationData(154150017, "Their Waters"),
    "Examined: ..__THEIR_WATERS__..: the embassy": LocationData(154150018, "Their Waters"),
    "Examined: ..__THEIR_VESSEL__..: the funny little room": LocationData(154150019, "Their Vessel"),
    "Examined: ..__THEIR_VESSEL__..: clemens romanus": LocationData(154150020, "Their Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: pilot cyst": LocationData(154150021, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: glazika": LocationData(154150022, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: container": LocationData(154150023, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: parasite plane": LocationData(154150024, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: climbing wall": LocationData(154150025, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: dull heart": LocationData(154150026, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: workspace": LocationData(154150027, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: translation slab": LocationData(154150028, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: column": LocationData(154150029, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: bright ground-parasite": LocationData(154150030, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: advanced rejuvenation chamber": LocationData(154150031, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: high-pressure body": LocationData(154150032, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: personal storage": LocationData(154150033, "Dull Vessel"),
    "Examined: ..__OUR_DULL_VESSEL__..: equipment storage": LocationData(154150034, "Dull Vessel"),
    "Examined: ..__THE_EMBASSY__..: akizetesche": LocationData(154150035, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: cavik": LocationData(154150036, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: bozko": LocationData(154150037, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: kazki": LocationData(154150038, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: tozik": LocationData(154150039, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: gakvu": LocationData(154150040, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: miltza": LocationData(154150041, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: movefriend": LocationData(154150042, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: mindcores": LocationData(154150043, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: container": LocationData(154150044, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: qou body": LocationData(154150045, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: summarizer": LocationData(154150046, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: hostile container": LocationData(154150047, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: hostile veilklight": LocationData(154150048, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: recollection::discovery": LocationData(154150049, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: recollection::suspicion": LocationData(154150050, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: recollection::collapse": LocationData(154150051, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: attendant": LocationData(154150052, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: mystery cyst": LocationData(154150053, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: my seat": LocationData(154150054, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: barfriend": LocationData(154150055, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: orange simulacrum": LocationData(154150056, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: veilklight": LocationData(154150057, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: rejuvenation chamber": LocationData(154150058, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: kalstik stand": LocationData(154150059, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: face stand": LocationData(154150060, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: cyst cluster": LocationData(154150061, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: cyst pile": LocationData(154150062, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: clothing storage": LocationData(154150063, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: listener": LocationData(154150064, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: timestopper": LocationData(154150065, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: window": LocationData(154150066, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: simulacra dispensary": LocationData(154150067, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: tir qou": LocationData(154150068, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: jut qou": LocationData(154150069, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: kiv qou": LocationData(154150070, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: vel qou": LocationData(154150071, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: simulacra": LocationData(154150072, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: storage display": LocationData(154150073, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: bright weapons": LocationData(154150074, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: manipulation slab": LocationData(154150075, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: unkind eye": LocationData(154150076, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: sculptor": LocationData(154150077, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: veilk models": LocationData(154150078, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: damaged golem": LocationData(154150079, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: tendrils": LocationData(154150080, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: movefoe": LocationData(154150081, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: bstrd door": LocationData(154150082, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: unnerving cyst": LocationData(154150083, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: peculiar obelisk": LocationData(154150084, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: archive": LocationData(154150085, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: archival golem": LocationData(154150086, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: jutskin": LocationData(154150087, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: bstrdlight": LocationData(154150088, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: pain shelf": LocationData(154150089, "The Embassy"),
    "Examined: ..__THE_EMBASSY__..: bstrd golem": LocationData(154150090, "The Embassy"),
    "Examined: ..__CACHE__..: the storm": LocationData(154150091, "Cache"),
    "Examined: ..__CACHE__..: polygonation spire": LocationData(154150092, "Cache"),
    "Examined: ..__CACHE__..: ÉœÙ]ïå¥¹": LocationData(154150093, "Cache"),
    "Examined: ..__CACHE__..: ? ???? ?? ?? ??": LocationData(154150094, "Cache"),
    "Examined: ..__CACHE__..: Ò½º": LocationData(154150095, "Cache"),
    "Examined: »é»¯uÂ%S¥(»: memoryhole": LocationData(154150096, "Memory Hole"),
    "Examined: a?-?b?-????-y?s?: s w   al kk": LocationData(154150097, "Beneath"),
    "Examined: a?-?b?-????-y?s?: Ƙø¿ƶḳ¿±": LocationData(154150098, "Beneath"),
    "Examined: a?-?b?-????-y?s?: ×è.÷ùÏÏøø": LocationData(154150099, "Beneath"),
    "Examined: p?a-??r?-???s?-t?e?: piece": LocationData(154150100, "Parasite Plane"),
    "Examined: ..__JOKZI_OZO__..: council": LocationData(154150101, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: fairy": LocationData(154150102, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: isabel": LocationData(154150103, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: effigy": LocationData(154150104, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: sun": LocationData(154150105, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: gate::gate::?/::G:a;;T:E": LocationData(154150106, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: gate::gaGATE::te::?/..::G:a;;T:E": LocationData(154150107, "Jokzi Ozo"),
    "Examined: ..__JOKZI_OZO__..: GELI": LocationData(154150108, "Jokzi Ozo"),
    "Examined: ..__GOLEM_MAINTENANCE__..: cavelight": LocationData(154150109, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: grand door": LocationData(154150110, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: veilk spear": LocationData(154150111, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: geli": LocationData(154150112, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: lesser terminal": LocationData(154150113, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: greater terminal": LocationData(154150114, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: distribution door": LocationData(154150115, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: instruction workspace": LocationData(154150116, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: preprocessing metals": LocationData(154150117, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: ruined glazika": LocationData(154150118, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: dog": LocationData(154150119, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: archival sludge": LocationData(154150120, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: dull structure": LocationData(154150121, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: shelf": LocationData(154150122, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: echo chamber": LocationData(154150123, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: lightning terminals": LocationData(154150124, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: stowed tools": LocationData(154150125, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: impressor": LocationData(154150126, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: archival hatch": LocationData(154150127, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: husk": LocationData(154150128, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: constructor": LocationData(154150129, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: kivskin": LocationData(154150130, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: repairfriend": LocationData(154150131, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: golem": LocationData(154150132, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: dozkallvi": LocationData(154150133, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: gauntlet": LocationData(154150134, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: dullzika": LocationData(154150135, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: warped container": LocationData(154150136, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: translation core": LocationData(154150137, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: »õGQàº3¾õ”cR%": LocationData(154150138, "Golem Maintenance"),
    "Examined: ..__GOLEM_MAINTENANCE__..: foundation golem": LocationData(154150139, "Golem Maintenance"),
    "Examined: ::/FRAME/: daemon mimic": LocationData(154150140, "::/FRAME/"),
    "Examined: ::/FRAME/: wrk": LocationData(154150141, "::/FRAME/"),
    "Examined: ::/FRAME/: clw": LocationData(154150142, "::/FRAME/"),
    "Examined: ::/FRAME/: net": LocationData(154150143, "::/FRAME/"),
    "Examined: ::/FRAME/: enfc": LocationData(154150144, "::/FRAME/"),
    "Examined: ::/FRAME/: seer": LocationData(154150145, "::/FRAME/"),
    "Examined: ::/FRAME/: archn": LocationData(154150146, "::/FRAME/"),
    "Examined: ::/FRAME/: dct": LocationData(154150147, "::/FRAME/"),
    "Examined: ::/FRAME/: spwn": LocationData(154150148, "::/FRAME/"),
    "Examined: ::/FRAME/: idea": LocationData(154150149, "::/FRAME/"),
    "Examined: ::/FRAME/: imp": LocationData(154150150, "::/FRAME/"),
    "Examined: ::/FRAME/: anti": LocationData(154150151, "::/FRAME/"),
    "Examined: ::/FRAME/: wheel": LocationData(154150152, "::/FRAME/"),
    "Examined: ::/FRAME/: radio": LocationData(154150153, "::/FRAME/"),
    "Examined: ::/FRAME/: basterminal": LocationData(154150154, "::/FRAME/"),
    "Examined: ::/FRAME/: exchange terminal": LocationData(154150155, "::/FRAME/"),
    "Examined: ::/FRAME/: interloper": LocationData(154150156, "::/FRAME/"),
    "Examined: ..__PALE_HALLS__..: idril": LocationData(154150157, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: telyu": LocationData(154150158, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spire status": LocationData(154150159, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: map": LocationData(154150160, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: adull's altar": LocationData(154150161, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: lesser mind status": LocationData(154150162, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: support pod": LocationData(154150163, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: silencing spire": LocationData(154150164, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: dullima pod": LocationData(154150165, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spinal tether": LocationData(154150166, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: malvi's body": LocationData(154150167, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: knowledge pool": LocationData(154150168, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: heart terminal": LocationData(154150169, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: priority branch": LocationData(154150170, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral mass": LocationData(154150171, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral figure": LocationData(154150172, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral shape": LocationData(154150173, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral attendant": LocationData(154150174, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral jutskin": LocationData(154150175, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral horror": LocationData(154150176, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral golem": LocationData(154150177, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral glazika": LocationData(154150178, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: possessed archivist": LocationData(154150179, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral archival golem": LocationData(154150180, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral eye": LocationData(154150181, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: possessed miltza": LocationData(154150182, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: reanimated golem": LocationData(154150183, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral kiv": LocationData(154150184, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral qou": LocationData(154150185, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: spectral dull golem": LocationData(154150186, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: ceremony": LocationData(154150187, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: ceremony vein": LocationData(154150188, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: ceremony tendril": LocationData(154150189, "Pale Halls"),
    "Examined: ..__PALE_HALLS__..: vekoa": LocationData(154150190, "Pale Halls"),
    "Examined: ..__THE_VOID__..: gate::bright moon": LocationData(154150191, "The Void"),
    "Examined: ..__CITY_SURFACE__..: vehicle stream crossing mechanism": LocationData(154150192, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: elevator buttons": LocationData(154150193, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: water cooler": LocationData(154150194, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: frightfully fragile vessel": LocationData(154150195, "City Streets"),
    "Examined: ..__THE_EMBASSY__..: recollection::better times": LocationData(154150196, "The Embassy"),
    "Examined: ..__CACHE__..: gate::¿þ©ÿ’ýäý": LocationData(154150197, "Cache"),
    "Examined: ..__CACHE__..: ±L~>#»{Â_÷ß": LocationData(154150198, "Cache"),
    "Examined: ..__JOKZI_OZO__..: ækiZ¥Ét": LocationData(154150199, "Jokzi Ozo"),
    "Examined: ?-?l?-?a??-bs?: what miracles can be made": LocationData(154150200, "Labs"),
    "Examined: ?-?l?-?a??-bs?: tendrils wind around dead veins": LocationData(154150201, "Labs"),
    "Examined: ?-?l?-?a??-bs?: the storm greets us": LocationData(154150202, "Labs"),
    "Examined: ?-?l?-?a??-bs?: another idle worry": LocationData(154150203, "Labs"),
    "Examined: ?-?l?-?a??-bs?: the project blooms": LocationData(154150204, "Labs"),
    "Examined: ..__BETTER_TIMES__..: dignitary": LocationData(154150205, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: kazki's pilot cyst": LocationData(154150206, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: nerve terminal": LocationData(154150207, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: vekoa's proxy": LocationData(154150208, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: malvi": LocationData(154150209, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: mobile simulacra dispensary": LocationData(154150210, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: auxiliaries": LocationData(154150211, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: guktik ward": LocationData(154150212, "Better Times"),
    "Examined: ..__BETTER_TIMES__..: simulacra display": LocationData(154150213, "Better Times"),
    "Examined: ..__AQUARIUM__..: bench": LocationData(154150214, "Better Times"),
    "Examined: ..__AQUARIUM__..: tree": LocationData(154150215, "Better Times"),
    "Examined: ..__AQUARIUM__..: depth dwellers": LocationData(154150216, "Better Times"),
    "Examined: ..__AQUARIUM__..: isabel": LocationData(154150217, "Better Times"),
    "Examined: ..__AQUARIUM__..: countless fauna in their various shapes": LocationData(154150218, "Better Times"),
    "Examined: ..__BRIGHT_MOON__..: haunted by velzie": LocationData(154150219, "Bright Moon"),
    "Examined: ..__BRIGHT_MOON__..: ‡Ä%æ¼Ý": LocationData(154150220, "Bright Moon"),
    "Examined: ..__BRIGHT_MOON__..: our dull anchor": LocationData(154150221, "Bright Moon"),
}

def getscansanityrules(world: "CorruObserverWorld"):
    return {
        "Hub: Talked to funfriend about EP0 Epilogue container": lambda state: state.has("Examined: ..__OUR_DULL_VESSEL__..: container", world.player),
        "Examined: ..__CITY_SURFACE__..: slim streetwalker": lambda state: state.has("Progressive EP0 Epilogue", world.player),
        "Examined: ..__CITY_SURFACE__..: stre wal k": lambda state: state.has("Progressive EP0 Epilogue", world.player),
        "Examined: ..__CITY_SURFACE__..: electric face box": lambda state: (state.has("Progressive EP0 Epilogue", world.player) and state.has("Menu: EP1 Shown Materials", world.player)),
        "Examined: ..__CITY_SURFACE__..: beautiful parasite": lambda state: (logic.canAccessCityStreetIsabel(state, world.player)),
        "Examined: ..__THEIR_VESSEL__..: clemens romanus": lambda state: (state.has("Progressive EP0 Epilogue", world.player) and state.has("Menu: EP1 Shown Materials", world.player)),
        "Examined: ..__OUR_DULL_VESSEL__..: parasite plane": lambda state: state.has("Menu: EP1 Fed", world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: climbing wall": lambda state: state.has("Menu: EP1 Fed", world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: dull heart": lambda state: state.has("Menu: EP1 Fed", world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: workspace": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: translation slab": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: column": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: bright ground-parasite": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: advanced rejuvenation chamber": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: high-pressure body": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: personal storage": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__OUR_DULL_VESSEL__..: equipment storage": lambda state: logic.canAccessIncoherentDullVessel(state, world.player),
        "Examined: ..__THE_EMBASSY__..: miltza": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: mindcores": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: qou body": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: hostile container": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: hostile veilklight": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: recollection::suspicion": lambda state: (state.has("The Embassy: Completed Discovery", world.player)),
        "Examined: ..__THE_EMBASSY__..: recollection::collapse": lambda state: (state.has("Menu: EP2 Intro", world.player)),
        "Examined: ..__THE_EMBASSY__..: mystery cyst": lambda state: (state.has("The Embassy: Completed Discovery", world.player)),
        "Examined: ..__THE_EMBASSY__..: simulacra": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: storage display": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: bright weapons": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: manipulation slab": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: unkind eye": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: sculptor": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: veilk models": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: damaged golem": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: tendrils": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: movefoe": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player)),
        "Examined: ..__THE_EMBASSY__..: bstrd door": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: unnerving cyst": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: peculiar obelisk": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: archive": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: archival golem": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: jutskin": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: bstrdlight": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: pain shelf": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__THE_EMBASSY__..: bstrd golem": lambda state: (state.has("Menu: EP2 Intro", world.player) and state.has("Hub: Framing Device Installation", world.player) and state.has("The Embassy: Movefriend Fight Dialogue Begin", world.player)),
        "Examined: ..__CACHE__..: Ò½º": lambda state: state.has("Menu: EP2 Intro", world.player),
        "Examined: ..__JOKZI_OZO__..: fairy": lambda state: state.has("The Void: Fairy Unitied", world.player),
        "Examined: ..__JOKZI_OZO__..: isabel": lambda state: state.has("City Streets: Isabel Unitied", world.player),
        "Examined: ..__JOKZI_OZO__..: effigy": lambda state: state.has("City Streets: Isabel Unitied", world.player),
        "Examined: ..__JOKZI_OZO__..: sun": lambda state: state.has("City Streets: Isabel Unitied", world.player),
        "Examined: ..__JOKZI_OZO__..: gate::gate::?/::G:a;;T:E": lambda state: state.has("The Void: Fairy Unitied", world.player) or state.can_reach_entrance("Beneath -> Jokzi Ozo", world.player),
        "Examined: ..__JOKZI_OZO__..: gate::gaGATE::te::?/..::G:a;;T:E": lambda state: state.has("The Void: Fairy Unitied", world.player) or state.can_reach_entrance("Beneath -> Jokzi Ozo", world.player),
        "Examined: ..__JOKZI_OZO__..: GELI": lambda state: state.has("::/FRAME/: Won Escape", world.player),
        "Examined: ..__THE_VOID__..: gate::bright moon": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player),
        "Examined: ..__CITY_SURFACE__..: vehicle stream crossing mechanism": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and logic.canAccessCityStreetIsabel(state, world.player),
        "Examined: ..__CITY_SURFACE__..: elevator buttons": lambda state: logic.canAccessCityStreetOffice(state, world.player),
        "Examined: ..__CITY_SURFACE__..: water cooler": lambda state: logic.canAccessCityStreetOffice(state, world.player),
        "Examined: ..__CITY_SURFACE__..: frightfully fragile vessel": lambda state: state.has("Jokzi Ozo: Freedom Mask", world.player) and logic.canAccessCityStreetOffice(state, world.player),
        "Examined: ..__THE_EMBASSY__..: recollection::better times": lambda state: (state.has("Labs: Wakizet Unity", world.player)),
        "Examined: ..__CACHE__..: gate::¿þ©ÿ’ýäý": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player),
        "Examined: ..__CACHE__..: ±L~>#»{Â_÷ß": lambda state: state.has("Jokzi Ozo: Joy Mask", world.player) and state.can_reach_entrance("!!__MEMBRANE_LESION__!!", world.player),
        "Examined: ..__JOKZI_OZO__..: ækiZ¥Ét": lambda state: (state.has("Labs: Wakizet Unity", world.player)),
        "Examined: ?-?l?-?a??-bs?: what miracles can be made": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)),
        "Examined: ?-?l?-?a??-bs?: tendrils wind around dead veins": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)),
        "Examined: ?-?l?-?a??-bs?: the storm greets us": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)),
        "Examined: ?-?l?-?a??-bs?: another idle worry": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)),
        "Examined: ?-?l?-?a??-bs?: the project blooms": lambda state: (state.has("Jokzi Ozo: Freedom Mask", world.player) and state.has("Labs: Wakizet Unity", world.player) and state.can_reach_entrance("!!__REFERENTIAL SCAR__!! (to Labs)", world.player)),
        "Examined: ..__BRIGHT_MOON__..: ‡Ä%æ¼Ý": lambda state: state.has("Jokzi Ozo: Freedom Mask", world.player),
    }

modlocations_obski = {
    "Visited: /local/beneath/obeski/": LocationData(154149000, "O-BSK-I"),
    "O-BSK-I: Other Obesk piece": LocationData(154149001, "O-BSK-I"),
    "O-BSK-I: Talked to piece": LocationData(154149002, "O-BSK-I"),
    "Visited: /local/uncosm/simulacrum/": LocationData(154149003, "Memory Hole"),
    "Visited: /local/uncosm/perish/": LocationData(154149004, "Memory Hole"),
}

modlocations_surfacerunning = {
    "Visited: /local/uncosm/surfacerunning/": LocationData(154149005, "Memory Hole"),
    "Memory Hole: Surface Running, Introduction chapter end": LocationData(154149006, "Memory Hole"),
    "Memory Hole: Surface Running, Bone chapter end": LocationData(154149007, "Memory Hole"),
    "Memory Hole: Surface Running, Eyes chapter end": LocationData(154149008, "Memory Hole"),
    "Memory Hole: Surface Running, Claws chapter end": LocationData(154149009, "Memory Hole"),
    "Memory Hole: Surface Running, Ichor chapter end": LocationData(154149010, "Memory Hole"),
    "Memory Hole: Surface Running, Light chapter end": LocationData(154149011, "Memory Hole"),
}

modlocations_quiz = {
    "Visited: /local/uncosm/quiz/": LocationData(154149012, "Memory Hole"),
}

modlocations_maze = {
    "First Chat (Incoherent, Funnier Maze): Caged Demon": LocationData(154149013, "First Chat"),
    "First Chat (Incoherent, Funnier Maze): Demon Unitied": LocationData(154149014, "First Chat"),
    "First Chat (Incoherent, Funnier Maze): Reached End": LocationData(154149015, "First Chat"),
}

#modlocations_dialoguetelephone = {
#    "connection_attempted": LocationData(154149016, "Menu"), # Menu: Examined Dendritic Cyst is required to be progression because of this
#}

modlocations_kotzu = {
    "Visited: /local/uncosm/claws/": LocationData(154149017, "Memory Hole"),
    "Visited: /local/uncosm/outside/": LocationData(154149018, "Memory Hole"),
    "Visited: /local/uncosm/better/": LocationData(154149019, "Memory Hole"),
    "Visited: /local/uncosm/wound/": LocationData(154149020, "Memory Hole"),
    "Visited: /local/uncosm/footsteps/": LocationData(154149021, "Memory Hole"),
    "Visited: /local/uncosm/forward/": LocationData(154149022, "Memory Hole"),
    "Visited: /local/uncosm/colored/": LocationData(154149023, "Memory Hole"),
    "Visited: /local/uncosm/connections/": LocationData(154149024, "Memory Hole"),
    "Visited: /local/uncosm/improvement/": LocationData(154149025, "Memory Hole"),
    "Visited: /local/uncosm/influence/": LocationData(154149026, "Memory Hole"),
    "Visited: /local/uncosm/mindcore/": LocationData(154149027, "Memory Hole"),
    "Visited: /local/uncosm/kotzu/": LocationData(154149028, "Memory Hole"),
    "Memory Hole: Kotzu, Zokka Found": LocationData(154149029, "Memory Hole"),
    "Memory Hole: Kotzu, Moth Return": LocationData(154149030, "Memory Hole"),
    "Memory Hole: Kotzu, Intro Complete": LocationData(154149031, "Memory Hole"),
    "Memory Hole: Kotzu, Azzun Dialogue": LocationData(154149032, "Memory Hole"),
    "Memory Hole: Kotzu, Zuteki Dialogue": LocationData(154149033, "Memory Hole"),
}

modlocations_humoroushumors = {
    "::/FRAME/: Firing Squad Reward BFG": LocationData(154149034, "::/FRAME/"),
    "::/FRAME/: Firing Squad Reward Grenade": LocationData(154149035, "::/FRAME/"),
    "::/FRAME/: Firing Squad Reward Rifle": LocationData(154149036, "::/FRAME/"),
    "::/FRAME/: Firing Squad Reward Shotgun": LocationData(154149037, "::/FRAME/"),
    "::/FRAME/: Firing Squad Reward Sniper": LocationData(154149038, "::/FRAME/"),
    "::/FRAME/: Hazard": LocationData(154149039, "::/FRAME/"),
    "::/FRAME/: Palestone unlock": LocationData(154149040, "::/FRAME/"),
}

modlocations_vielk = {
    "Visited: /local/uncosm/vielk/": LocationData(154149041, "Memory Hole"),
}

modlocations_mothlobotomy = {
    "Moth Lobotomy": LocationData(154149042, "Menu"),
}

modlocations_councilaltdance = {
    "Jokzi Ozo: Council's Alternate Dance": LocationData(154149043, "Jokzi Ozo"),
}

modscansanity_locations_obski = {
    "Examined: o???-??b????-?s-???k?-i??: piece": LocationData(154159000, "O-BSK-I"),
}

modscansanity_locations_theirstreets = {
    "Examined: ..__CITY_SURFACE__..: fountain bench": LocationData(154159001, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: bridge bench": LocationData(154159002, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: streets bench": LocationData(154159003, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: park bench": LocationData(154159004, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: city bench": LocationData(154159005, "City Streets"),
    "Examined: ..__CITY_SURFACE__..: waterfront bench": LocationData(154159006, "City Streets"),
}

masterlocation_table = {**location_table,
                        **modlocations_obski,
                        **modlocations_surfacerunning,
                        **modlocations_quiz,
                        **modlocations_maze,
                        **modlocations_kotzu,
                        **modlocations_humoroushumors,
                        **modlocations_vielk,
                        **modlocations_mothlobotomy,
                        **modlocations_councilaltdance,
                        **scansanity_location_table,
                        **modscansanity_locations_obski,
                        **modscansanity_locations_theirstreets}
# 
# modrules = {
#     "First Chat (Incoherent, Funnier Maze): Caged Demon": lambda state: logic.canAccessIncoherentInterview(state, world.player),
#     "First Chat (Incoherent, Funnier Maze): Demon Unitied": lambda state: ((logic.canAccessIncoherentInterview(state, world.player)) and state.has("Jokzi Ozo: Unity Mask", world.player)),
#     "First Chat (Incoherent, Funnier Maze): Reached End": lambda state: logic.canAccessIncoherentInterview(state, world.player),
#     "connection_attempted": lambda state: state.has("Menu: Examined Dendritic Cyst", world.player),
#     "Memory Hole: Kotzu, Azzun Dialogue": lambda state: state.has("Memory Hole: Kotzu, Intro Complete", world.player),
#     "Memory Hole: Kotzu, Zuteki Dialogue": lambda state: state.has("Memory Hole: Kotzu, Intro Complete", world.player),   
# }